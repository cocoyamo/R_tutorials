facet_wrap(~ Show, scales = "free_x") +
scale_x_discrete(labels = function(x) paste0("Color ", seq_along(x))) +  # 色票的名稱作為x軸標籤
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))  # x軸標籤旋轉90度
data$color_code <- factor(seq_along(data$color), labels = data$color)
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  # x軸標籤旋轉90度
labs(x = "Color Palette")  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_minimal() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette")  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_test() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette")  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_test() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 建立資料框
data <- data.frame(
Show = c("The Big Bang Theory", "The Big Bang Theory", "The Big Bang Theory", "The Big Bang Theory", "The Big Bang Theory",
"Friends", "Friends", "Friends", "Friends", "Friends",
"Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday",
"Green Arrow", "Green Arrow", "Green Arrow", "Green Arrow", "Green Arrow",
"Brooklyn Nine-Nine", "Brooklyn Nine-Nine", "Brooklyn Nine-Nine", "Brooklyn Nine-Nine", "Brooklyn Nine-Nine"),
color = c("#E74C3C", "#F1C40F", "#3498DB", "#E91E63", "#8E6B47",
"#9171B5", "#4CAF50", "#F18F01", "#F7C143", "#D4B996",
"#0D0D0D", "#4B4E6D", "#5A4B8C", "#F5F5F5", "#264653",
"#2C6E49", "#6B4F3B", "#333333", "#4A5D23", "#B0B0B0",
"#1D3557", "#1F6F8B", "#D32F2F", "#A5A5A5", "#C8B4A4"),
value = rep(0.3, 25)
)
data$color_code <- factor(seq_along(data$color), labels = data$color)
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_test() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
theme_get()
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_get() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_blank() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_ridges() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
# theme_ridges() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
# theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 30, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 180, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1,show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) +  # 設置 x 軸標籤為輕微傾斜
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE) +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "white") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.2)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x") +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x", nrow = 1) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x", nrow = 1) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5, size = 4)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x", nrow = 1) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5, size = 5)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x", nrow = 1) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5, size = 7)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 繪製圖形
ggplot(data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x", nrow = 1) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.3, size = 7)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
# 建立資料框
tv_data <- data.frame(
Show = c("The Big Bang Theory", "The Big Bang Theory", "The Big Bang Theory", "The Big Bang Theory", "The Big Bang Theory",
"Friends", "Friends", "Friends", "Friends", "Friends",
"Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday",
"Green Arrow", "Green Arrow", "Green Arrow", "Green Arrow", "Green Arrow",
"Brooklyn Nine-Nine", "Brooklyn Nine-Nine", "Brooklyn Nine-Nine", "Brooklyn Nine-Nine", "Brooklyn Nine-Nine"),
color = c("#E74C3C", "#F1C40F", "#3498DB", "#E91E63", "#8E6B47",
"#9171B5", "#4CAF50", "#F18F01", "#F7C143", "#D4B996",
"#0D0D0D", "#4B4E6D", "#5A4B8C", "#F5F5F5", "#264653",
"#2C6E49", "#6B4F3B", "#333333", "#4A5D23", "#B0B0B0",
"#1D3557", "#1F6F8B", "#D32F2F", "#A5A5A5", "#C8B4A4"),
value = rep(0.3, 25)
)
tv_data$color_code <- factor(seq_along(tv_data$color), labels = tv_data$color)
# 繪製圖形
ggplot(tv_data, aes(x = color_code, y = value, fill = color_code)) +
geom_bar(stat = "identity", width = 1, show.legend = FALSE, color = "black") +  # 取消顯示legend
facet_wrap(~ Show, scales = "free_x", nrow = 1) +
scale_fill_identity() +  # 使填充顏色與資料中的色票一致
theme_void() +
theme(
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(angle = 0, hjust = 0.5, size = 7)
) +
labs(x = "Color Palette", y = NULL)  # 設置 x 軸標題
bookdown::render_book("index.Rmd", "bookdown::gitbook", output_dir = "docs")
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .7, fill = "#BDD5EA") +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
facet_wrap(theme ~ ., scales = "free")
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .7, fill = "#BDD5EA") +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12)
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .7) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender"))
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .7) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender"))
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender"))
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging, group = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender"))
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender")) +
theme_minimal()
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender")) +
theme_test()
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender")) +
theme_test()+
theme(legend.position = "hide")
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
# geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender")) +
theme_test()+
theme(legend.position = "hide")
lego_sample |>
na.omit() |>
ggplot(aes(x = packaging, y = pieces, fill = packaging)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender")) +
theme_test()+
theme(legend.position = "hide")
lego_sample
lego_sample |>
na.omit() |>
ggplot(aes(x = theme, y = pieces, fill = theme)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender")) +
theme_test()+
theme(legend.position = "hide")
lego_sample |>
na.omit() |>
ggplot(aes(x = theme, y = pieces, fill = theme)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "lavender", "#BDD5EA")) +
theme_test()+
theme(legend.position = "hide")
lego_sample |>
na.omit() |>
ggplot(aes(x = theme, y = pieces, fill = theme)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
geom_errorbar(stat = "summary", position = position_dodge(0.5), width = .12) +
scale_fill_manual(values = c("skyblue", "#BDD5EA", "lavender")) +
theme_test()+
theme(legend.position = "hide")
