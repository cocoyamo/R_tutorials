#| label: read-students-raw
students_raw <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv")
students_raw
students_raw
#| label: names
students_raw |>
rename(
student_id = `Student ID`,
full_name = "Full Name",
favorite_food = `favourite.food`,
mean_plan = `mealPlan`,
age = "AGE"
)
#| label: names
students_raw |>
rename(
student_id = `Student ID`,
full_name = "Full Name",
favorite_food = `favourite.food`,
mean_plan = `mealPlan`,
age = "AGE"
) -> students
#| label: nas
students_raw <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
na = c("N/A",""))
#| label: nas
students_raw <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""))
students_raw
#| label: nas
students_raw <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""))
students_raw
#| label: nas
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""))
students
#| label: types
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""),
col_types = c("numeric", "text", "text", "factor", "numeric"))
#| label: types
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""),
col_types = c("numeric", "text", "text", "factor", "numeric"))
#| label: types
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""),
col_types = c("numeric", "text", "text", "factor", "numeric"))
#| label: types
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A",""))
#| label: types
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
col_names = c("student_id", "full_name", "favorite_food", "mean_plan", "age"),
skip = 1,
na = c("N/A","")) |>
mutate(age = parse_number(if_else(age == "five", "5", age)))
students
students |>
col_types = c("numeric", "text", "text", "factor", "numeric"))
students |>
col_types = c("numeric", "text", "text", "factor", "numeric")
col_types = (students, c("numeric", "text", "text", "factor", "numeric"))
col_types = (students c("numeric", "text", "text", "factor", "numeric"))
col_types = (students, c("numeric", "text", "text", "factor", "numeric"))
students_raw |>
janitor::clean_names()
install.packages("janitor")
library(janitor)
students_raw |>
janitor::clean_names()
#| label: nas
students <- read_csv("https://data-science-with-r.github.io/data/students-raw.csv",
na = c("N/A",""))
students
students |>
janitor::clean_names()
students |>
janitor::clean_names()-> studnets
students |>
janitor::clean_names()-> students
students
#| label: types
students |>
mutate(age = parse_number(if_else(age == "five", "5", age)))
#| label: types
students |>
mutate(age = parse_number(if_else(age == "five", "5", age)),
mean_plan = as.factor(meal_plan))
#| label: types
students |>
mutate(age = parse_number(if_else(age == "five", "5", age)),
meal_plan = as.factor(meal_plan))
#| label: types
students |>
mutate(age = as.numeric(parse_number(if_else(age == "five", "5", age))),
meal_plan = as.factor(meal_plan))
library(palmerpenguins)
palmerpenguins
penguins
library(tidyverse)
penguins
levels(penguins$species)
penguins |>
filter(species %in% c("Adelie", "Gentoo"))
penguins |>
filter(species %in% c("Adelie", "Gentoo")) -> penguins_new
penguins |>
filter(species %in% c("Adelie", "Gentoo")) -> penguins_new
getwd()
write_csv(penguins_new, "penguins.csv")
penguins |>
filter(species %in% c("Adelie", "Gentoo")) -> penguins_new
write_csv(penguins_new, "penguins.csv")
write_csv(penguins_new, file = "penguins.csv")
penguins_new
write_csv(penguins_new, file = "/Users/moya/Documents/R_tutorials/penguins.csv")
bookdown::render_book("index.Rmd", "bookdown::gitbook", output_dir = "docs")
bookdown::render_book("index.Rmd", "bookdown::gitbook", output_dir = "docs")
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
fig.path = "figures/")
heroes2 |>
group_by(Publisher) |>
summarize(mean_strength = mean(Strength, na.rm = TRUE))
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
group_by(Publisher) |>
summarize(Strengths = list(Strength)) |>
with(t.test(Strengths[[1]], Strengths[[2]], paired = FALSE))
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = Intelligence,
detailed = T)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = Gender,
detailed = T)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, BMI_status),
detailed = TRUE)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, BMI_status),
detailed = TRUE)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, BMI),
detailed = T)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, BMI),
detailed = T)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = Gender,
detailed = T)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = Intelligence,
detailed = T)
table(heroes2$Gender, heroes2$Intelligence)
heroes2 |>
filter(Intelligence != "low") |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, Intelligence),
type = 2,
detailed = T)
heroes2 |>
filter(Intelligence != "low") |>
group_by(Gender) |>
anova_test(
dv = Strength,
wid = Name,
between = Intelligence,
detailed = T)
heroes2 |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, Intelligence),
detailed = T)
heroes2 |>
filter(Intelligence != "low") |>
anova_test(
dv = Strength,
wid = Name,
between = c(Gender, Intelligence, BMI_status),
type = 2,
detailed = T)
teaching_style |>
anova_test(
dv = score,
wid = student,
between = style,
within = timing,
detailed = T)
ezANOVA(
final_not_temp,
dv = acc,
wid = Subject_pid,
#  within = Consistency,
# within = Operation,
within = c(Consistency,Operation),
#  between = age_group,
observed = NULL,
diff = NULL,
reverse_diff = FALSE,
type = 2,
white.adjust = FALSE,
detailed = F,
return_aov = FALSE)
library(ez)
ezANOVA(
final_not_temp,
dv = acc,
wid = Subject_pid,
#  within = Consistency,
# within = Operation,
within = c(Consistency,Operation),
#  between = age_group,
observed = NULL,
diff = NULL,
reverse_diff = FALSE,
type = 2,
white.adjust = FALSE,
detailed = F,
return_aov = FALSE)
#master_sheet <- read_excel("AUDACIOUS_master sheet.xlsx")
master_sheet <- read_excel("~/Documents/nccu/labs/brain n learning lab_s/finalfinal/AUDACIOUS_master sheet.xlsx")
library(tidyverse)
library(readxl)
library(dplyr)
master_sheet %>%
group_by(Subject_pid,age_group, Consistency, Operation) %>%
filter(Subject_pid %in% c("601","602","609","612","611","614","615","619","618","620","621","623","625","624",
"627","628","629","630","637","638","639","5008","5009","5013","5014","5015","5016","5017",
"5021","5020","5023","5022","5018","5024","5025","5003","5026","5028","5030","5031","5032",
"5033","5034","5036","5037","5038","5039","5041")) %>%
summarise(acc = mean(Response.ACC)) -> acc
master_sheet %>%
group_by(Subject_pid,age_group, Consistency, Operation) %>%
filter(Response.ACC == "1") %>% #只選對的進入計算反應時間
summarise(mean_rt = mean(Response.RT), median_rt = median(Response.RT)) -> rt_s
acc %>%
left_join(rt_s, by = c("Subject_pid", "age_group", "Consistency", "Operation")) -> final_not_temp
age_group.labs <- c("Adolescents", "Children")
names(age_group.labs) <- c("ado", "chi")
final_not_temp %>%
ggplot(aes(x = Operation, y = median_rt, group = Consistency, fill = Consistency)) +
geom_bar(stat = "summary", position = position_dodge(.8), width = .8) +
facet_wrap(age_group~ ., labeller = labeller(age_group = age_group.labs))+
#  facet_wrap(age_group~ ., scales = "free")+
# coord_cartesian(ylim = c(0.65,1.03))+
coord_cartesian(ylim = c(2500,12000))+
geom_errorbar(stat = "summary", position = position_dodge(.8), width = .12) +
# ylab("Accuracy")+
ylab("Median Reaction Time (ms)")+
theme_test()+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = 'black'))+
scale_fill_manual(values=c("#F39B7FFF","#91D1C2FF"),name = "Consistency", labels = c("Consistent", "Inconsistent"))+
scale_x_discrete(labels=c('Addition', 'Subtraction')) +
theme(legend.position = "bottom")
# for writing more readilbe
final_not_temp |>
ggplot(aes(x = Operation,  y = median_rt, fill = Consistency)) +
geom_bar(stat = "summary", position = "dodge")
library(rstatix)
final_not_temp %>%
# filter(age_group == "chi")%>%
# group_by(age_group) %>%
group_by(age_group) %>%
#group_by(Operation) |>
anova_test(
dv = acc,
wid = Subject_pid,
type = NULL,
#    between = age_group,
#   within = Operation,
# within = c(Consistency,Operation),
within = Consistency,
effect.size = "ges", #generalized eta squared
error = NULL,
white.adjust = FALSE,
observed = NULL,
detailed = FALSE)
final_not_temp_for_2way_AOV_age_con %>%
group_by(age_group) %>%
anova_test(
dv = acc,
wid = Subject_pid,
within = Consistency,
effect.size = "ges",   # 使用 generalized eta squared
detailed = FALSE
)
library(ez)
ezANOVA(
final_not_temp,
dv = acc,
wid = Subject_pid,
#  within = Consistency,
# within = Operation,
within = c(Consistency,Operation),
#  between = age_group,
observed = NULL,
diff = NULL,
reverse_diff = FALSE,
type = 2,
white.adjust = FALSE,
detailed = F,
return_aov = FALSE)
final_not_temp |>
group_by(Consistency, Operation) |>
summarize(
median_rt = mean(median_rt),
mean_acc = mean(acc)
)
ezANOVA(
final_not_temp,
dv = acc,
wid = Subject_pid,
#  within = Consistency,
# within = Operation,
within = c(Consistency,Operation),
#  between = age_group,
observed = NULL,
diff = NULL,
reverse_diff = FALSE,
type = 2,
white.adjust = FALSE,
detailed = F,
return_aov = FALSE)
final_not_temp_for_2way_AOV_age_con %>%
group_by(age_group) %>%
anova_test(
dv = acc,
wid = Subject_pid,
within = Consistency,
effect.size = "ges",   # 使用 generalized eta squared
detailed = FALSE
)
final_not_temp_for_2way_AOV_age_con <- final_not_temp %>%
group_by(age_group, Consistency, Subject_pid) %>%
summarize(acc = mean(acc, na.rm = TRUE), .groups = "drop")
final_not_temp_for_2way_AOV_age_con %>%
group_by(age_group) %>%
anova_test(
dv = acc,
wid = Subject_pid,
within = Consistency,
effect.size = "ges",   # 使用 generalized eta squared
detailed = FALSE
)
heroes2
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
group_by(Publisher, Gender, Name) |>
summarise(height = mean(Height, na.rm = TRUE), .group = "drop")
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
group_by(Publisher, Gender, Name) |>
summarise(height = mean(Height, na.rm = TRUE), .groups = "drop")
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
group_by(Publisher, Gender, Name) |>
summarise(height = mean(Height, na.rm = TRUE), .groups = "drop") -> temporary_hero_data_for_anova
temporary_hero_data_for_anova
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = height,
wid = Name,
within = Gender,
effect.size = "ges",
detailed = FALSE
)
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = height,
wid = Name,
within = Gender,
effect.size = "ges",
detailed = FALSE
)
temporary_hero_data_for_anova
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
group_by(Publisher, Gender, Name) |>
summarise(Height = mean(Height, na.rm = TRUE), .groups = "drop") -> temporary_hero_data_for_anova
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
group_by(Publisher, Gender, Name) |>
summarise(Height = mean(Height, na.rm = TRUE), .groups = "drop") -> temporary_hero_data_for_anova
temporary_hero_data_for_anova
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = Height,
wid = Name,
within = Gender,
effect.size = "ges",
detailed = FALSE
)
summary(temporary_hero_data_for_anova)
temporary_hero_data_for_anova |>
group_by(Name) |>
summarise(unique_genders = n_distinct(Gender))
distinct(heroes$Gender)
levels(heroes$Gender)
heroes2
heroes2 |>
filter(Publisher %in% c("Marvel Comics", "DC Comics")) |>
filter(Gender %in% c("F", "M")) |>
group_by(Publisher, Gender, Name) |>
summarise(Height = mean(Height, na.rm = TRUE), .groups = "drop") -> temporary_hero_data_for_anova
temporary_hero_data_for_anova
temporary_hero_data_for_anova
summary(temporary_hero_data_for_anova)
summary(temporary_hero_data_for_anova)
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = Height,
wid = Name,
within = Gender,
effect.size = "ges",
detailed = FALSE
)
temporary_hero_data_for_anova |>
group_by(Publisher) |>
summarise(Height = mean(Height, na.rm = TRUE))
temporary_hero_data_for_anova |>
group_by(Publisher, Gender) |>
summarise(n = n(), .groups = "drop")
temporary_hero_data_for_anova |>
group_by(Name) |>
summarise(unique_genders = n_distinct(Gender)) |>
filter(unique_genders == 1)
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = Height,
wid = Name,
within = Gender,
effect.size = "ges",
detailed = FALSE
)
temporary_hero_data_for_anova |>
group_by(Name, Gender) |>
summarise(n = n(), .groups = "drop") |>
filter(n == 0)
temporary_hero_data_for_anova |>
group_by(Publisher, Gender) |>
summarise(missing_height = sum(is.na(Height)), .groups = "drop")
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = Height,
wid = Name,
within = Gender,
detailed = FALSE
)
temporary_hero_data_for_anova |>
group_by(Name) |>
summarise(unique_genders = n_distinct(Gender), .groups = "drop") |>
filter(unique_genders > 1)
temporary_hero_data_for_anova |>
group_by(Publisher) |>
anova_test(
dv = Height,
wid = Name,
within = Gender,
detailed = FALSE
)
